// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SFN.Socafan.Database.DataAccess;

#nullable disable

namespace SFN.Socafan.API.Migrations
{
    [DbContext(typeof(SFNDbContext))]
    [Migration("20240618201017_AddRoleToUser")]
    partial class AddRoleToUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("SFN.Socafan.Common.Models.Answer", b =>
                {
                    b.Property<int>("IdAnswer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEntry")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUser")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Q1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Q2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Q3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Q4")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Q5")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Q6")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Q7")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Q8")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Q9")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdAnswer");

                    b.HasIndex("IdEntry");

                    b.HasIndex("IdUser");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("SFN.Socafan.Common.Models.Entry", b =>
                {
                    b.Property<int>("IdEntry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Payment")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdEntry");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("SFN.Socafan.Common.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CellPhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SFN.Socafan.Common.Models.Answer", b =>
                {
                    b.HasOne("SFN.Socafan.Common.Models.Entry", "Entry")
                        .WithMany("Answers")
                        .HasForeignKey("IdEntry")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SFN.Socafan.Common.Models.User", "User")
                        .WithMany("Answers")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entry");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SFN.Socafan.Common.Models.Entry", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("SFN.Socafan.Common.Models.User", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
